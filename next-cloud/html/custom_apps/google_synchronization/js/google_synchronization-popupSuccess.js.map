{"version":3,"file":"google_synchronization-popupSuccess.js","mappings":"mBAEA,MACMA,ECHN,SAAmBC,EAAKC,EAAKC,GAC3B,MAAMC,EAAOC,SAASC,cAAc,kBAAkBL,KAAOC,KAC7D,GAAa,OAATE,EAAe,CACjB,QAAiB,IAAbD,EACF,OAAOA,EAET,MAAM,IAAII,MAAM,gCAAgCL,QAAUD,IAC5D,CACA,IACE,OAAOO,KAAKC,MAAMC,KAAKN,EAAKO,OAC9B,CAAE,MAAOC,GACP,MAAM,IAAIL,MAAM,iCAAiCL,QAAUD,IAC7D,CACF,CDXcY,CAAU,yBAA0B,cAC3BC,UAEnBC,OAAOC,SACVD,OAAOC,OAAOC,YAAY,CAAEjB,aAC5Be,OAAOG,Q","sources":["webpack:///google_synchronization/src/popupSuccess.js","webpack:///google_synchronization/node_modules/@nextcloud/initial-state/dist/index.mjs"],"sourcesContent":["import { loadState } from '@nextcloud/initial-state'\n\nconst state = loadState('google_synchronization', 'popup-data')\nconst username = state.user_name\n\nif (window.opener) {\n\twindow.opener.postMessage({ username })\n\twindow.close()\n}\n","function loadState(app, key, fallback) {\n  const elem = document.querySelector(`#initial-state-${app}-${key}`);\n  if (elem === null) {\n    if (fallback !== void 0) {\n      return fallback;\n    }\n    throw new Error(`Could not find initial state ${key} of ${app}`);\n  }\n  try {\n    return JSON.parse(atob(elem.value));\n  } catch (e) {\n    throw new Error(`Could not parse initial state ${key} of ${app}`);\n  }\n}\nexport {\n  loadState\n};\n"],"names":["username","app","key","fallback","elem","document","querySelector","Error","JSON","parse","atob","value","e","loadState","user_name","window","opener","postMessage","close"],"sourceRoot":""}