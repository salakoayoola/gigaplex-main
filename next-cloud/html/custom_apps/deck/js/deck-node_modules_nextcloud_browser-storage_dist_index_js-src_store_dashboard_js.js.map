{"version":3,"file":"deck-node_modules_nextcloud_browser-storage_dist_index_js-src_store_dashboard_js.js?v=a9e0c9288cf9cf613af0","mappings":"sKAOAA,EAAQC,WAQR,SAAoBC,GAClB,OAAO,IAAIC,EAAgBC,QAAQF,EACrC,EATA,IAAIC,EAAkBE,EAAuB,EAAQ,QACjDC,EAAiBD,EAAuB,EAAQ,QACpD,SAASA,EAAuBE,GAAO,OAAOA,GAAOA,EAAIC,WAAaD,EAAM,CAAEH,QAASG,EAAO,CAc9F,SAASE,EAAaC,EAASC,GAC7BC,OAAOC,KAAKH,GAASI,QAAOC,IAAKJ,GAAOA,EAAKI,KAAWC,IAAIN,EAAQO,WAAWC,KAAKR,GACtF,C,yFCjBAS,EAAAA,QAAIC,IAAIC,EAAAA,SAER,MAAMC,EAAY,ICHX,MAENC,GAAAA,CAAIA,GACH,OAAOC,EAAAA,EAAAA,IAAgB,sBAAqBD,IAC7C,CAEAE,GAAAA,CAAIX,GACH,OAAOY,EAAAA,GAAMD,IAAIE,KAAKJ,IAAK,YAAWT,KAAW,CAChDc,QAAS,CAAE,iBAAkB,UAE5BC,MACCC,GAAaC,QAAQC,QAAQF,EAASG,KAAKC,IAAID,QAC/CE,GAAQJ,QAAQK,OAAOD,KAExBE,OAAOF,GAAQJ,QAAQK,OAAOD,IAEjC,GDXD,GACCG,MAAO,CACNC,cAAe,IAEhBC,QAAS,CACRC,uBAAwBH,GAChB1B,OAAO8B,OAAOJ,EAAMC,eAAeI,QAG5CC,UAAW,CACVC,gBAAAA,CAAiBP,EAAOC,GACvBD,EAAMC,cAAgBA,CACvB,GAEDO,QAAS,CACR,kBAAMC,CAAYC,GAAa,IAAZ,OAAEC,GAAQD,EAE5BC,EAAO,yBADsB3B,EAAUG,IAAI,YAE5C,G","sources":["webpack:///deck/node_modules/@nextcloud/browser-storage/dist/index.js","webpack:///deck/src/store/dashboard.js","webpack:///deck/src/services/OverviewApi.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.clearAll = clearAll;\nexports.clearNonPersistent = clearNonPersistent;\nexports.getBuilder = getBuilder;\nvar _storagebuilder = _interopRequireDefault(require(\"./storagebuilder\"));\nvar _scopedstorage = _interopRequireDefault(require(\"./scopedstorage\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n/**\n * Get the storage builder for an app\n * @param appId App ID to scope storage\n */\nfunction getBuilder(appId) {\n  return new _storagebuilder.default(appId);\n}\n\n/**\n * Clear values from storage\n * @param storage The storage to clear\n * @param pred Callback to check if value should be cleared\n */\nfunction clearStorage(storage, pred) {\n  Object.keys(storage).filter(k => pred ? pred(k) : true).map(storage.removeItem.bind(storage));\n}\n\n/**\n * Clear all values from all storages\n */\nfunction clearAll() {\n  const storages = [window.sessionStorage, window.localStorage];\n  storages.map(s => clearStorage(s));\n}\n\n/**\n * Clear ony non persistent values\n */\nfunction clearNonPersistent() {\n  const storages = [window.sessionStorage, window.localStorage];\n  storages.map(s => clearStorage(s, k => !k.startsWith(_scopedstorage.default.GLOBAL_SCOPE_PERSISTENT)));\n}\n//# sourceMappingURL=index.js.map","/**\n * SPDX-FileCopyrightText: 2020 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\n\nimport Vue from 'vue'\nimport Vuex from 'vuex'\nimport { OverviewApi } from '../services/OverviewApi.js'\n\nVue.use(Vuex)\n\nconst apiClient = new OverviewApi()\n\nexport default {\n\tstate: {\n\t\tassignedCards: [],\n\t},\n\tgetters: {\n\t\tassignedCardsDashboard: state => {\n\t\t\treturn Object.values(state.assignedCards).flat()\n\t\t},\n\t},\n\tmutations: {\n\t\tsetAssignedCards(state, assignedCards) {\n\t\t\tstate.assignedCards = assignedCards\n\t\t},\n\t},\n\tactions: {\n\t\tasync loadUpcoming({ commit }) {\n\t\t\tconst upcommingCards = await apiClient.get('upcoming')\n\t\t\tcommit('setAssignedCards', upcommingCards)\n\t\t},\n\t},\n}\n","/**\n * SPDX-FileCopyrightText: 2020 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\n\nimport axios from '@nextcloud/axios'\nimport { generateOcsUrl } from '@nextcloud/router'\n\nexport class OverviewApi {\n\n\turl(url) {\n\t\treturn generateOcsUrl(`apps/deck/api/v1.0/${url}`)\n\t}\n\n\tget(filter) {\n\t\treturn axios.get(this.url(`overview/${filter}`), {\n\t\t\theaders: { 'OCS-APIRequest': 'true' },\n\t\t})\n\t\t\t.then(\n\t\t\t\t(response) => Promise.resolve(response.data.ocs.data),\n\t\t\t\t(err) => Promise.reject(err),\n\t\t\t)\n\t\t\t.catch((err) => Promise.reject(err),\n\t\t\t)\n\t}\n\n}\n"],"names":["exports","getBuilder","appId","_storagebuilder","default","_interopRequireDefault","_scopedstorage","obj","__esModule","clearStorage","storage","pred","Object","keys","filter","k","map","removeItem","bind","Vue","use","Vuex","apiClient","url","generateOcsUrl","get","axios","this","headers","then","response","Promise","resolve","data","ocs","err","reject","catch","state","assignedCards","getters","assignedCardsDashboard","values","flat","mutations","setAssignedCards","actions","loadUpcoming","_ref","commit"],"sourceRoot":""}