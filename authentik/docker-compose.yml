services:
  postgresql:
    image: docker.io/library/postgres:16-alpine
    container_name: authentik_db
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 5s
    volumes:
      - database:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
    networks:
      - backend
  redis:
    image: docker.io/library/redis:alpine
    command: --save 60 1 --loglevel warning
    container_name: authentik_redis
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 3s
    volumes:
      - redis:/data
    networks:
      - backend
  server:
    image: ghcr.io/goauthentik/server:2025.4
    restart: unless-stopped
    command: server
    container_name: authentik_server
    environment:
      - AUTHENTIK_SECRET_KEY=${AUTHENTIK_SECRET_KEY}
      - AUTHENTIK_REDIS__HOST=redis
      - AUTHENTIK_POSTGRESQL__HOST=postgresql
      - AUTHENTIK_POSTGRESQL__USER=${POSTGRES_USER}
      - AUTHENTIK_POSTGRESQL__NAME=${POSTGRES_DB}
      - AUTHENTIK_POSTGRESQL__PASSWORD=${POSTGRES_PASSWORD}
      - AUTHENTIK_ERROR_REPORTING__ENABLED=true
    volumes:
      - ./config/media:/media
      - ./config/custom-templates:/templates
    labels:
      - "traefik.enable=true"
      #HTTPS Router
      - "traefik.http.routers.authentik-secure.entrypoints=https"
      - "traefik.http.routers.authentik-secure.rule=Host(`pentagon.${DOMAIN}`)||Host(`authentik-admin.apps.${DOMAIN}`)" #Expose both outside and the internal domains for Traefik
      - "traefik.http.routers.authentik-secure.tls=true"
      - "traefik.http.routers.authentik-secure.tls.certresolver=cloudflare"
      # Service configuration
      - "traefik.http.services.authentik-service.loadbalancer.server.port=9000"
      - "traefik.http.routers.authentik-secure.service=authentik-service"
    # ports:
    #   - "${COMPOSE_PORT_HTTP:-9000}:9000"
    #   - "${COMPOSE_PORT_HTTPS:-9443}:9443"
    depends_on:
      - postgresql
      - redis
    networks:
      - frontend
      - backend
  worker:
    image: ghcr.io/goauthentik/server:2025.4
    restart: unless-stopped
    command: worker
    container_name: authentik_worker
    environment:
      - AUTHENTIK_SECRET_KEY=${AUTHENTIK_SECRET_KEY}
      - AUTHENTIK_REDIS__HOST=redis
      - AUTHENTIK_POSTGRESQL__HOST=postgresql
      - AUTHENTIK_POSTGRESQL__USER=${POSTGRES_USER}
      - AUTHENTIK_POSTGRESQL__NAME=${POSTGRES_DB}
      - AUTHENTIK_POSTGRESQL__PASSWORD=${POSTGRES_PASSWORD}
      - AUTHENTIK_ERROR_REPORTING__ENABLED=true
    user: root
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./config/media:/media
      - ./config/certs:/certs
      - ./config/custom-templates:/templates
    depends_on:
      - postgresql
      - redis
    networks:
      - backend

volumes:
  database:
    driver: local
  redis:
    driver: local

networks:
  frontend:
    external: true
  backend:
    external: true
