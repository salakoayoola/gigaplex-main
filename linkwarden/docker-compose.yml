services:
  postgres:
    image: postgres:16-alpine
    container_name: linkwarden-postgres
    env_file: .env
    restart: always
    volumes:
      - ./config/pgdata:/var/lib/postgresql/data
    networks:
      - linkwarden
  linkwarden:
    env_file: .env
    container_name: linkwarden
    environment:
      - DATABASE_URL=postgresql://postgres:${POSTGRES_PASSWORD}@postgres:5432/postgres
    restart: always
    # build: . # uncomment to build from source
    image: ghcr.io/linkwarden/linkwarden:latest # comment to build from source
    ports:
      - 3000:3000
    volumes:
      - ./config/data:/data/data
    depends_on:
      - postgres
      - meilisearch
    networks:
      - linkwarden
      - frontend
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=frontend"
      # HTTP Router (for redirect)
      - "traefik.http.routers.linkwarden.entrypoints=http"
      - "traefik.http.routers.linkwarden.rule=Host(`pocket.${DOMAIN}`)"
      - "traefik.http.middlewares.linkwarden-https-redirect.redirectscheme.scheme=https"
      # HTTPS Router
      - "traefik.http.routers.linkwarden.middlewares=linkwarden-https-redirect"
      - "traefik.http.routers.linkwarden-secure.entrypoints=https"
      - "traefik.http.routers.linkwarden-secure.rule=Host(`pocket.${DOMAIN}`)"
      - "traefik.http.routers.linkwarden-secure.tls=true"
      - "traefik.http.routers.linkwarden-secure.tls.certresolver=cloudflare"
      # Service configuration
      - "traefik.http.routers.linkwarden.middlewares=authentik-auth@file"
      - "traefik.http.routers.linkwarden-secure.service=linkwarden-service"
      - "traefik.http.services.linkwarden-service.loadbalancer.server.port=3000"
  meilisearch:
    image: getmeili/meilisearch:v1.12.8
    container_name: linkwarden-meilisearch
    restart: always
    env_file:
      - .env
    volumes:
      - ./config/meili_data:/meili_data
    networks:
      - linkwarden
networks:
  linkwarden:
    external: true
  frontend:
    external: true
