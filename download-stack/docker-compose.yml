services:
  # Gluetun - VPN Container
  gluetun:
    image: qmcgaw/gluetun:latest
    container_name: gluetun
    cap_add:
      - NET_ADMIN
    devices:
      - /dev/net/tun:/dev/net/tun
    restart: unless-stopped
    ports:
      # Port used by QBittorrent for torrenting (both TCP and UDP)
      - ${AIRVPN_PORT}:${AIRVPN_PORT}
      - ${AIRVPN_PORT}:${AIRVPN_PORT}/udp
      # QBittorrent Web UI only (Sonarr/Radarr/Prowlarr are separate containers)
      - 8081:8081

      #ARR Stack
      # - 9696:9696 #Prowlarr
      # - 7878:7878 #Sonarr
      # - 8989:8989 #Radarr

    volumes:
      - ./config-gluetun:/gluetun
    environment:
      - TZ=${TZ}
      - VPN_SERVICE_PROVIDER=${VPN_SERVICE_PROVIDER}
      - VPN_TYPE=${VPN_TYPE}
      - WIREGUARD_PRIVATE_KEY=${WIREGUARD_PRIVATE_KEY}
      - WIREGUARD_PRESHARED_KEY=${WIREGUARD_PRESHARED_KEY}
      - WIREGUARD_ADDRESSES=${WIREGUARD_ADDRESSES}
      # Tell the firewall to allow the QBittorrent peer port
      - FIREWALL_VPN_INPUT_PORTS=${AIRVPN_PORT}
    networks:
      - frontend
      - backend

  # QBittorrent Container
  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent:latest
    container_name: qbittorrent
    network_mode: "service:gluetun"
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - WEBUI_PORT=8081
    volumes:
      - ./config-qbittorrent:/config
      - ${DOWNLOADS}:/downloads
    restart: unless-stopped
    depends_on:
      - gluetun
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.qbittorrent-secure.entrypoints=https"
      - "traefik.http.routers.qbittorrent-secure.rule=Host(`qbit.media.${DOMAIN}`)||Host(`yeehaw.${DOMAIN}`)"
      - "traefik.http.routers.qbittorrent-secure.tls=true"
      - "traefik.http.routers.qbittorrent-secure.tls.certresolver=cloudflare"
      - "traefik.http.services.qbittorrent-service.loadbalancer.server.port=8081"

networks:
  frontend:
    external: true
  backend:
    external: false