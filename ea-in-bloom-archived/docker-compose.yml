services:
  wedding-nginx:
    build:
      context: .  # Changed from ./wedding-app to . (current directory)
      dockerfile: Dockerfile
    container_name: Wedding-nginx
    restart: unless-stopped
    volumes:  # Fixed format to be a proper list
      - ./nginx.conf:/etc/nginx/conf.d/default.conf  # Mount custom nginx config
    environment:
      - NGINX_HOST=${DOMAIN}
      - WEDDING_NGINX_PORT=80  # Using a unique environment variable name to avoid conflicts
      - TZ=Europe/London
      - PGID=1000
      - PUID=1000
    networks:
      - frontend
    security_opt:
      - no-new-privileges:true
    labels:
      - "traefik.enable=true"
      # HTTP Router (for redirect)
      - "traefik.http.routers.Wedding-nginx.entrypoints=http"
      - "traefik.http.routers.Wedding-nginx.rule=Host(`${DOMAIN}`)" # Root domain as requested
      - "traefik.http.middlewares.Wedding-nginx-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.Wedding-nginx.middlewares=Wedding-nginx-https-redirect"
      # HTTPS Router
      - "traefik.http.routers.Wedding-nginx-secure.entrypoints=https"
      - "traefik.http.routers.Wedding-nginx-secure.rule=Host(`${DOMAIN}`)" # Root domain as requested
      - "traefik.http.routers.Wedding-nginx-secure.tls=true"
      - "traefik.http.routers.Wedding-nginx-secure.tls.certresolver=cloudflare"
      # Service configuration
      - "traefik.http.services.Wedding-nginx-service.loadbalancer.server.port=80"
      - "traefik.http.routers.Wedding-nginx-secure.service=Wedding-nginx-service"
      
    # Note: No port mapping to host is defined here to avoid conflicts
    # Traefik handles the routing based on the domain name

networks:
  frontend:
    external: true